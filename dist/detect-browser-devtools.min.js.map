{"version":3,"sources":["webpack://DevTools/webpack/universalModuleDefinition","webpack://DevTools/webpack/bootstrap","webpack://DevTools/src/D:/Projects/detect-browser-devtools/src/index.ts","webpack://DevTools/src/D:/Projects/detect-browser-devtools/src/debugger/DebuggerManager.ts","webpack://DevTools/src/D:/Projects/detect-browser-devtools/src/devtools/ConsoleManager.ts","webpack://DevTools/src/D:/Projects/detect-browser-devtools/src/devtools/DevToolsManager.ts","webpack://DevTools/src/D:/Projects/detect-browser-devtools/src/utils/RequiredParameters.ts","webpack://DevTools/./node_modules/reflect-metadata/Reflect.js","webpack://DevTools/./node_modules/process/browser.js","webpack://DevTools/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DebuggerManager_1","ConsoleManager_1","DevToolsManager_1","RequiredParameters_1","Manager","DetectBrowserDevTools","freezeWhenDevToolsOpened","isEnabled","default","sharedInstance","startMonitoringDebuggerAttach","stopMonitoringDebuggerAttach","alwaysConsoleClear","enableAlwaysClearConsole","disableAlwaysClearConsole","startDevToolMonitoring","eventListener","startMonitoringDevTools","stopDevToolMonitoring","stopMonitoringDevTools","__decorate","CheckRequiredParameters","__param","Required","DebuggerManager","this","debuggerTimer","debuggerManager","setInterval","eval","console","warn","clearInterval","ConsoleManager","timerHandle","consoleManager","clear","DevToolsManager","monitoringTimer","isDevtoolOpened","consoleDirection","threshold","devToolsManager","_this","monitoringTimerHandler","isTriggered","isOpened","Firebug","chrome","isInitialized","devtools","toString","log","undefined","profiles","profile","profileEnd","length","wt","outerWidth","innerWidth","ht","outerHeight","innerHeight","orientation","requiredMetadataKey","target","index","existingRequiredParameters","Reflect","getOwnMetadata","push","defineMetadata","propertyName","descriptor","method","requiredParameters","_i","requiredParameters_1","parameterIndex","arguments","Error","apply","process","global","self","Function","exporter","makeExporter","previous","configurable","writable","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","functionPrototype","getPrototypeOf","usePolyfill","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","next","result","done","throw","error","return","_cacheKey","_cacheIndex","_find","set","delete","size","getKey","getValue","getEntry","insert","indexOf","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","GenRandomBytes","offset","byte","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","argument","ToBoolean","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","keysObj","obj","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","nextValue","IteratorValue","e","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","IsSymbol","ToString","IsArray","isArray","IsConstructor","V","func","iterResult","f","OrdinaryGetPrototypeOf","proto","prototypeProto","constructor","__","decorators","propertyKey","attributes","decorator","decorated","DecorateConstructor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","parent","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","ownKeys_1","hasKey","_a","parentKeys_1","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g"],"mappings":"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","file":"lib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DevTools\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DevTools\"] = factory();\n\telse\n\t\troot[\"DevTools\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import DebuggerManager from './debugger/DebuggerManager';\r\nimport ConsoleManager from './devtools/ConsoleManager';\r\nimport DevToolsManager from './devtools/DevToolsManager';\r\nimport { Required, CheckRequiredParameters } from './utils/RequiredParameters';\r\n\r\nclass DetectBrowserDevTools {\r\n  /**\r\n   * If developer tools opened, pause current browser session.\r\n   * @param isEnabled  `true` is enable this feature.\r\n   */\r\n  @CheckRequiredParameters\r\n  public freezeWhenDevToolsOpened(@Required isEnabled: boolean): void {\r\n    if (isEnabled) {\r\n      DebuggerManager.sharedInstance().startMonitoringDebuggerAttach();\r\n    } else {\r\n      DebuggerManager.sharedInstance().stopMonitoringDebuggerAttach();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disable all console log.\r\n   * @param isEnabled  `true` is enable this feature.\r\n   */\r\n  @CheckRequiredParameters\r\n  public alwaysConsoleClear(@Required isEnabled: boolean): void {\r\n    if (isEnabled) {\r\n      ConsoleManager.sharedInstance().enableAlwaysClearConsole();\r\n    } else {\r\n      ConsoleManager.sharedInstance().disableAlwaysClearConsole();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Receive monitoring developer tools isOpened event.\r\n   * @param eventListener  eventListener (isOpened: boolean, orientation: string)\r\n   */\r\n  @CheckRequiredParameters\r\n  public startDevToolMonitoring(@Required eventListener:\r\n                                           (isOpened: boolean, orientation: string) => any): void {\r\n    DevToolsManager.sharedInstance().startMonitoringDevTools(eventListener);\r\n  }\r\n\r\n  /**\r\n   * Stop monitoring developer tools isOpened event.\r\n   */\r\n  @CheckRequiredParameters\r\n  public stopDevToolMonitoring(): void {\r\n    DevToolsManager.sharedInstance().stopMonitoringDevTools();\r\n  }\r\n}\r\n\r\nconst Manager = new DetectBrowserDevTools();\r\nexport { Manager };\r\n","export default class DebuggerManager {\r\n  private static debuggerManager?: DebuggerManager = null;\r\n\r\n  private debuggerTimer: number = null;\r\n\r\n  private constructor() { }\r\n\r\n  public static sharedInstance(): DebuggerManager {\r\n    if (DebuggerManager.debuggerManager === null) {\r\n      DebuggerManager.debuggerManager = new DebuggerManager();\r\n    }\r\n\r\n    return DebuggerManager.debuggerManager;\r\n  }\r\n\r\n  startMonitoringDebuggerAttach() {\r\n    if (this.debuggerTimer !== null) {\r\n      console.warn('Monitoring timer already running.');\r\n\r\n      return;\r\n    }\r\n\r\n    this.debuggerTimer = setInterval(() => { eval('debugger'); }, 10);\r\n  }\r\n\r\n  stopMonitoringDebuggerAttach() {\r\n    if (this.debuggerTimer === null) {\r\n      console.warn('Not running monitoring timer. ' +\r\n        'Did you call startMonitoringDebuggerAttach() method before calling it?');\r\n\r\n      return;\r\n    }\r\n\r\n    clearInterval(this.debuggerTimer);\r\n  }\r\n}\r\n","export default class ConsoleManager {\n  private static consoleManager?: ConsoleManager = null;\n\n  private timerHandle: number = null;\n\n  private constructor() { }\n\n  public static sharedInstance(): ConsoleManager {\n    if (ConsoleManager.consoleManager === null) {\n      ConsoleManager.consoleManager = new ConsoleManager();\n    }\n\n    return ConsoleManager.consoleManager;\n  }\n\n  public enableAlwaysClearConsole(): void {\n    if (this.timerHandle !== null) {\n      return;\n    }\n\n    this.timerHandle = setInterval(() => { console.clear(); }, 1000);\n  }\n\n  public disableAlwaysClearConsole(): void {\n    if (this.timerHandle === null) {\n      return;\n    }\n\n    clearInterval(this.timerHandle);\n  }\n}\n","export default class DevToolsManager {\n  private static devToolsManager?: DevToolsManager = null;\n  private monitoringTimer: number = null;\n\n  private isDevtoolOpened = false;\n  private consoleDirection = '';\n\n  private threshold: number = 150;\n\n  private constructor() { }\n\n  public static sharedInstance(): DevToolsManager {\n    if (DevToolsManager.devToolsManager === null) {\n      DevToolsManager.devToolsManager = new DevToolsManager();\n    }\n\n    return DevToolsManager.devToolsManager;\n  }\n\n  public startMonitoringDevTools(eventListener:\n                                     (isOpened: boolean, orientation: string) => any): void {\n    if (this.monitoringTimer !== null) {\n      console.warn('Already started monitoring dev tools!!');\n      return;\n    }\n\n    this.monitoringTimer = setInterval(() => { this.monitoringTimerHandler(eventListener); },\n                                       1000);\n  }\n\n  public stopMonitoringDevTools(): void {\n    if (this.monitoringTimer === null) {\n      console.warn('Not started monitoring dev tools!!');\n      return;\n    }\n\n    clearInterval(this.monitoringTimer);\n  }\n\n  private monitoringTimerHandler(eventListener:\n                                     (isOpened: boolean, orientation: string) => any): void {\n    let isTriggered = false;\n    let isOpened = false;\n\n    // @ts-ignore\n    // Firebug 지원이 중단됐다고는 하는데 그래도 지원은 해야겠지?\n    if (window.Firebug && window.Firebug.chrome && window.Firebug.chrome.isInitialized) {\n      isOpened = true;\n      isTriggered = true;\n\n      // console.info('SEC 1');\n    }\n\n    if (!isTriggered) {\n      const devtools = /./;\n      // @ts-ignore\n      devtools.toString = () => {\n        isOpened = true;\n        isTriggered = true;\n\n        // console.info('SEC 2');\n      };\n      console.log('%c', devtools);\n      console.clear();\n    }\n\n    if (!isTriggered) {\n      // Chrome 구버전에서 사용하기\n      // @ts-ignore\n      if (console.profiles !== undefined && console.profiles !== null) {\n        console.profile();\n        console.profileEnd();\n\n        // @ts-ignore\n        if (console.profiles.length > 0) {\n          isOpened = true;\n          isTriggered = true;\n\n          // console.info('SEC 3');\n        }\n      }\n    }\n\n    const wt = window.outerWidth - window.innerWidth > this.threshold;\n    const ht = window.outerHeight - window.innerHeight > this.threshold;\n\n    // console.log(isOpened, wt, ht);\n\n    let orientation = wt ? 'vertical' : 'horizontal';\n    orientation = isOpened && !wt && !ht ? 'seperated-window' : orientation;\n    orientation = !isOpened ? 'closed' : orientation;\n\n    if (!isTriggered) { // 위에서 처리됐으면\n      if (wt || ht) {\n        isOpened = true;\n      }\n    }\n\n    if (this.isDevtoolOpened !== isOpened || this.consoleDirection !== orientation) {\n      this.isDevtoolOpened = isOpened;\n      this.consoleDirection = orientation;\n\n      eventListener(this.isDevtoolOpened, orientation);\n    }\n  }\n}\n","import 'reflect-metadata';\r\n\r\nconst requiredMetadataKey = Symbol('Required');\r\n\r\nexport const Required = (target: Object, key: string | symbol, index: number) => {\r\n  const existingRequiredParameters: number[] = Reflect.getOwnMetadata(requiredMetadataKey, target, key) || [];\r\n  existingRequiredParameters.push(index);\r\n\r\n  Reflect.defineMetadata(requiredMetadataKey, existingRequiredParameters, target, key);\r\n};\r\n\r\nexport const CheckRequiredParameters = (target: any, propertyName: string, descriptor: TypedPropertyDescriptor<Function>) => {\r\n  const method = descriptor.value;\r\n  descriptor.value = function () {\r\n    const requiredParameters: number[] = Reflect.getOwnMetadata(requiredMetadataKey, target, propertyName);\r\n    if (requiredParameters) {\r\n      for (const parameterIndex of requiredParameters) {\r\n        if (parameterIndex >= arguments.length || arguments[parameterIndex] === undefined) {\r\n          throw new Error(`Missing parameters ${propertyName} method.`);\r\n        }\r\n      }\r\n    }\r\n\r\n    return method.apply(this, arguments);\r\n  };\r\n};\r\n","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n    (function (factory) {\r\n        var root = typeof global === \"object\" ? global :\r\n            typeof self === \"object\" ? self :\r\n                typeof this === \"object\" ? this :\r\n                    Function(\"return this;\")();\r\n        var exporter = makeExporter(Reflect);\r\n        if (typeof root.Reflect === \"undefined\") {\r\n            root.Reflect = Reflect;\r\n        }\r\n        else {\r\n            exporter = makeExporter(root.Reflect, exporter);\r\n        }\r\n        factory(exporter);\r\n        function makeExporter(target, previous) {\r\n            return function (key, value) {\r\n                if (typeof target[key] !== \"function\") {\r\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\r\n                }\r\n                if (previous)\r\n                    previous(key, value);\r\n            };\r\n        }\r\n    })(function (exporter) {\r\n        var hasOwn = Object.prototype.hasOwnProperty;\r\n        // feature test for Symbol support\r\n        var supportsSymbol = typeof Symbol === \"function\";\r\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        var HashMap = {\r\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n            create: supportsCreate\r\n                ? function () { return MakeDictionary(Object.create(null)); }\r\n                : supportsProto\r\n                    ? function () { return MakeDictionary({ __proto__: null }); }\r\n                    : function () { return MakeDictionary({}); },\r\n            has: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key); }\r\n                : function (map, key) { return key in map; },\r\n            get: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n                : function (map, key) { return map[key]; },\r\n        };\r\n        // Load global or shim versions of Map, Set, and WeakMap\r\n        var functionPrototype = Object.getPrototypeOf(Function);\r\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n        // [[Metadata]] internal slot\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n        var Metadata = new _WeakMap();\r\n        /**\r\n         * Applies a set of decorators to a property of a target object.\r\n         * @param decorators An array of decorators.\r\n         * @param target The target object.\r\n         * @param propertyKey (Optional) The property key to decorate.\r\n         * @param attributes (Optional) The property descriptor for the target key.\r\n         * @remarks Decorators are applied in reverse order.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Example = Reflect.decorate(decoratorsArray, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Object.defineProperty(Example, \"staticMethod\",\r\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n         *\r\n         *     // method (on prototype)\r\n         *     Object.defineProperty(Example.prototype, \"method\",\r\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n         *\r\n         */\r\n        function decorate(decorators, target, propertyKey, attributes) {\r\n            if (!IsUndefined(propertyKey)) {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                    throw new TypeError();\r\n                if (IsNull(attributes))\r\n                    attributes = undefined;\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n                return DecorateProperty(decorators, target, propertyKey, attributes);\r\n            }\r\n            else {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsConstructor(target))\r\n                    throw new TypeError();\r\n                return DecorateConstructor(decorators, target);\r\n            }\r\n        }\r\n        exporter(\"decorate\", decorate);\r\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n        /**\r\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n         * @param metadataKey The key for the metadata entry.\r\n         * @param metadataValue The value for the metadata entry.\r\n         * @returns A decorator function.\r\n         * @remarks\r\n         * If `metadataKey` is already defined for the target and target key, the\r\n         * metadataValue for that key will be overwritten.\r\n         * @example\r\n         *\r\n         *     // constructor\r\n         *     @Reflect.metadata(key, value)\r\n         *     class Example {\r\n         *     }\r\n         *\r\n         *     // property (on constructor, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticProperty;\r\n         *     }\r\n         *\r\n         *     // property (on prototype, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         property;\r\n         *     }\r\n         *\r\n         *     // method (on constructor)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticMethod() { }\r\n         *     }\r\n         *\r\n         *     // method (on prototype)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         method() { }\r\n         *     }\r\n         *\r\n         */\r\n        function metadata(metadataKey, metadataValue) {\r\n            function decorator(target, propertyKey) {\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                    throw new TypeError();\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n            }\r\n            return decorator;\r\n        }\r\n        exporter(\"metadata\", metadata);\r\n        /**\r\n         * Define a unique metadata entry on the target.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param metadataValue A value that contains attached metadata.\r\n         * @param target The target object on which to define metadata.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n         *\r\n         *     // decorator factory as metadata-producing annotation.\r\n         *     function MyAnnotation(options): Decorator {\r\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n         *     }\r\n         *\r\n         */\r\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        exporter(\"defineMetadata\", defineMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasMetadata\", hasMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getMetadata\", getMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadata\", getOwnMetadata);\r\n        /**\r\n         * Gets the metadata keys defined on the target object or its prototype chain.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getMetadataKeys\", getMetadataKeys);\r\n        /**\r\n         * Gets the unique metadata keys defined on the target object.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\r\n        /**\r\n         * Deletes the metadata entry from the target object with the provided key.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function deleteMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            if (!metadataMap.delete(metadataKey))\r\n                return false;\r\n            if (metadataMap.size > 0)\r\n                return true;\r\n            var targetMetadata = Metadata.get(target);\r\n            targetMetadata.delete(propertyKey);\r\n            if (targetMetadata.size > 0)\r\n                return true;\r\n            Metadata.delete(target);\r\n            return true;\r\n        }\r\n        exporter(\"deleteMetadata\", deleteMetadata);\r\n        function DecorateConstructor(decorators, target) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsConstructor(decorated))\r\n                        throw new TypeError();\r\n                    target = decorated;\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target, propertyKey, descriptor);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsObject(decorated))\r\n                        throw new TypeError();\r\n                    descriptor = decorated;\r\n                }\r\n            }\r\n            return descriptor;\r\n        }\r\n        function GetOrCreateMetadataMap(O, P, Create) {\r\n            var targetMetadata = Metadata.get(O);\r\n            if (IsUndefined(targetMetadata)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                targetMetadata = new _Map();\r\n                Metadata.set(O, targetMetadata);\r\n            }\r\n            var metadataMap = targetMetadata.get(P);\r\n            if (IsUndefined(metadataMap)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                metadataMap = new _Map();\r\n                targetMetadata.set(P, metadataMap);\r\n            }\r\n            return metadataMap;\r\n        }\r\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return true;\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n            return false;\r\n        }\r\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            return ToBoolean(metadataMap.has(MetadataKey));\r\n        }\r\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n            return undefined;\r\n        }\r\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return undefined;\r\n            return metadataMap.get(MetadataKey);\r\n        }\r\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n            metadataMap.set(MetadataKey, MetadataValue);\r\n        }\r\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n        function OrdinaryMetadataKeys(O, P) {\r\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (parent === null)\r\n                return ownKeys;\r\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n            if (parentKeys.length <= 0)\r\n                return ownKeys;\r\n            if (ownKeys.length <= 0)\r\n                return parentKeys;\r\n            var set = new _Set();\r\n            var keys = [];\r\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n                var key = ownKeys_1[_i];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n                var key = parentKeys_1[_a];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        }\r\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n        function OrdinaryOwnMetadataKeys(O, P) {\r\n            var keys = [];\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return keys;\r\n            var keysObj = metadataMap.keys();\r\n            var iterator = GetIterator(keysObj);\r\n            var k = 0;\r\n            while (true) {\r\n                var next = IteratorStep(iterator);\r\n                if (!next) {\r\n                    keys.length = k;\r\n                    return keys;\r\n                }\r\n                var nextValue = IteratorValue(next);\r\n                try {\r\n                    keys[k] = nextValue;\r\n                }\r\n                catch (e) {\r\n                    try {\r\n                        IteratorClose(iterator);\r\n                    }\r\n                    finally {\r\n                        throw e;\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        // 6 ECMAScript Data Typ0es and Values\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n        function Type(x) {\r\n            if (x === null)\r\n                return 1 /* Null */;\r\n            switch (typeof x) {\r\n                case \"undefined\": return 0 /* Undefined */;\r\n                case \"boolean\": return 2 /* Boolean */;\r\n                case \"string\": return 3 /* String */;\r\n                case \"symbol\": return 4 /* Symbol */;\r\n                case \"number\": return 5 /* Number */;\r\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n                default: return 6 /* Object */;\r\n            }\r\n        }\r\n        // 6.1.1 The Undefined Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n        function IsUndefined(x) {\r\n            return x === undefined;\r\n        }\r\n        // 6.1.2 The Null Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n        function IsNull(x) {\r\n            return x === null;\r\n        }\r\n        // 6.1.5 The Symbol Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n        function IsSymbol(x) {\r\n            return typeof x === \"symbol\";\r\n        }\r\n        // 6.1.7 The Object Type\r\n        // https://tc39.github.io/ecma262/#sec-object-type\r\n        function IsObject(x) {\r\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n        }\r\n        // 7.1 Type Conversion\r\n        // https://tc39.github.io/ecma262/#sec-type-conversion\r\n        // 7.1.1 ToPrimitive(input [, PreferredType])\r\n        // https://tc39.github.io/ecma262/#sec-toprimitive\r\n        function ToPrimitive(input, PreferredType) {\r\n            switch (Type(input)) {\r\n                case 0 /* Undefined */: return input;\r\n                case 1 /* Null */: return input;\r\n                case 2 /* Boolean */: return input;\r\n                case 3 /* String */: return input;\r\n                case 4 /* Symbol */: return input;\r\n                case 5 /* Number */: return input;\r\n            }\r\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n            if (exoticToPrim !== undefined) {\r\n                var result = exoticToPrim.call(input, hint);\r\n                if (IsObject(result))\r\n                    throw new TypeError();\r\n                return result;\r\n            }\r\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n        }\r\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n        function OrdinaryToPrimitive(O, hint) {\r\n            if (hint === \"string\") {\r\n                var toString_1 = O.toString;\r\n                if (IsCallable(toString_1)) {\r\n                    var result = toString_1.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            else {\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var toString_2 = O.toString;\r\n                if (IsCallable(toString_2)) {\r\n                    var result = toString_2.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            throw new TypeError();\r\n        }\r\n        // 7.1.2 ToBoolean(argument)\r\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n        function ToBoolean(argument) {\r\n            return !!argument;\r\n        }\r\n        // 7.1.12 ToString(argument)\r\n        // https://tc39.github.io/ecma262/#sec-tostring\r\n        function ToString(argument) {\r\n            return \"\" + argument;\r\n        }\r\n        // 7.1.14 ToPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-topropertykey\r\n        function ToPropertyKey(argument) {\r\n            var key = ToPrimitive(argument, 3 /* String */);\r\n            if (IsSymbol(key))\r\n                return key;\r\n            return ToString(key);\r\n        }\r\n        // 7.2 Testing and Comparison Operations\r\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n        // 7.2.2 IsArray(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isarray\r\n        function IsArray(argument) {\r\n            return Array.isArray\r\n                ? Array.isArray(argument)\r\n                : argument instanceof Object\r\n                    ? argument instanceof Array\r\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n        }\r\n        // 7.2.3 IsCallable(argument)\r\n        // https://tc39.github.io/ecma262/#sec-iscallable\r\n        function IsCallable(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.4 IsConstructor(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isconstructor\r\n        function IsConstructor(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.7 IsPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n        function IsPropertyKey(argument) {\r\n            switch (Type(argument)) {\r\n                case 3 /* String */: return true;\r\n                case 4 /* Symbol */: return true;\r\n                default: return false;\r\n            }\r\n        }\r\n        // 7.3 Operations on Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n        // 7.3.9 GetMethod(V, P)\r\n        // https://tc39.github.io/ecma262/#sec-getmethod\r\n        function GetMethod(V, P) {\r\n            var func = V[P];\r\n            if (func === undefined || func === null)\r\n                return undefined;\r\n            if (!IsCallable(func))\r\n                throw new TypeError();\r\n            return func;\r\n        }\r\n        // 7.4 Operations on Iterator Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n        function GetIterator(obj) {\r\n            var method = GetMethod(obj, iteratorSymbol);\r\n            if (!IsCallable(method))\r\n                throw new TypeError(); // from Call\r\n            var iterator = method.call(obj);\r\n            if (!IsObject(iterator))\r\n                throw new TypeError();\r\n            return iterator;\r\n        }\r\n        // 7.4.4 IteratorValue(iterResult)\r\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n        function IteratorValue(iterResult) {\r\n            return iterResult.value;\r\n        }\r\n        // 7.4.5 IteratorStep(iterator)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n        function IteratorStep(iterator) {\r\n            var result = iterator.next();\r\n            return result.done ? false : result;\r\n        }\r\n        // 7.4.6 IteratorClose(iterator, completion)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n        function IteratorClose(iterator) {\r\n            var f = iterator[\"return\"];\r\n            if (f)\r\n                f.call(iterator);\r\n        }\r\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n        function OrdinaryGetPrototypeOf(O) {\r\n            var proto = Object.getPrototypeOf(O);\r\n            if (typeof O !== \"function\" || O === functionPrototype)\r\n                return proto;\r\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n            // Try to determine the superclass constructor. Compatible implementations\r\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n            // or ensure each class has a valid `constructor` property on its prototype that\r\n            // points back to the constructor.\r\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n            if (proto !== functionPrototype)\r\n                return proto;\r\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n            var prototype = O.prototype;\r\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n            if (prototypeProto == null || prototypeProto === Object.prototype)\r\n                return proto;\r\n            // If the constructor was not a function, then we cannot determine the heritage.\r\n            var constructor = prototypeProto.constructor;\r\n            if (typeof constructor !== \"function\")\r\n                return proto;\r\n            // If we have some kind of self-reference, then we cannot determine the heritage.\r\n            if (constructor === O)\r\n                return proto;\r\n            // we have a pretty good guess at the heritage.\r\n            return constructor;\r\n        }\r\n        // naive Map shim\r\n        function CreateMapPolyfill() {\r\n            var cacheSentinel = {};\r\n            var arraySentinel = [];\r\n            var MapIterator = (function () {\r\n                function MapIterator(keys, values, selector) {\r\n                    this._index = 0;\r\n                    this._keys = keys;\r\n                    this._values = values;\r\n                    this._selector = selector;\r\n                }\r\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n                MapIterator.prototype.next = function () {\r\n                    var index = this._index;\r\n                    if (index >= 0 && index < this._keys.length) {\r\n                        var result = this._selector(this._keys[index], this._values[index]);\r\n                        if (index + 1 >= this._keys.length) {\r\n                            this._index = -1;\r\n                            this._keys = arraySentinel;\r\n                            this._values = arraySentinel;\r\n                        }\r\n                        else {\r\n                            this._index++;\r\n                        }\r\n                        return { value: result, done: false };\r\n                    }\r\n                    return { value: undefined, done: true };\r\n                };\r\n                MapIterator.prototype.throw = function (error) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    throw error;\r\n                };\r\n                MapIterator.prototype.return = function (value) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    return { value: value, done: true };\r\n                };\r\n                return MapIterator;\r\n            }());\r\n            return (function () {\r\n                function Map() {\r\n                    this._keys = [];\r\n                    this._values = [];\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                }\r\n                Object.defineProperty(Map.prototype, \"size\", {\r\n                    get: function () { return this._keys.length; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n                Map.prototype.get = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    return index >= 0 ? this._values[index] : undefined;\r\n                };\r\n                Map.prototype.set = function (key, value) {\r\n                    var index = this._find(key, /*insert*/ true);\r\n                    this._values[index] = value;\r\n                    return this;\r\n                };\r\n                Map.prototype.delete = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    if (index >= 0) {\r\n                        var size = this._keys.length;\r\n                        for (var i = index + 1; i < size; i++) {\r\n                            this._keys[i - 1] = this._keys[i];\r\n                            this._values[i - 1] = this._values[i];\r\n                        }\r\n                        this._keys.length--;\r\n                        this._values.length--;\r\n                        if (key === this._cacheKey) {\r\n                            this._cacheKey = cacheSentinel;\r\n                            this._cacheIndex = -2;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                Map.prototype.clear = function () {\r\n                    this._keys.length = 0;\r\n                    this._values.length = 0;\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                };\r\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n                Map.prototype._find = function (key, insert) {\r\n                    if (this._cacheKey !== key) {\r\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                    }\r\n                    if (this._cacheIndex < 0 && insert) {\r\n                        this._cacheIndex = this._keys.length;\r\n                        this._keys.push(key);\r\n                        this._values.push(undefined);\r\n                    }\r\n                    return this._cacheIndex;\r\n                };\r\n                return Map;\r\n            }());\r\n            function getKey(key, _) {\r\n                return key;\r\n            }\r\n            function getValue(_, value) {\r\n                return value;\r\n            }\r\n            function getEntry(key, value) {\r\n                return [key, value];\r\n            }\r\n        }\r\n        // naive Set shim\r\n        function CreateSetPolyfill() {\r\n            return (function () {\r\n                function Set() {\r\n                    this._map = new _Map();\r\n                }\r\n                Object.defineProperty(Set.prototype, \"size\", {\r\n                    get: function () { return this._map.size; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Set.prototype.has = function (value) { return this._map.has(value); };\r\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n                Set.prototype.clear = function () { this._map.clear(); };\r\n                Set.prototype.keys = function () { return this._map.keys(); };\r\n                Set.prototype.values = function () { return this._map.values(); };\r\n                Set.prototype.entries = function () { return this._map.entries(); };\r\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n                return Set;\r\n            }());\r\n        }\r\n        // naive WeakMap shim\r\n        function CreateWeakMapPolyfill() {\r\n            var UUID_SIZE = 16;\r\n            var keys = HashMap.create();\r\n            var rootKey = CreateUniqueKey();\r\n            return (function () {\r\n                function WeakMap() {\r\n                    this._key = CreateUniqueKey();\r\n                }\r\n                WeakMap.prototype.has = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\r\n                };\r\n                WeakMap.prototype.get = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n                };\r\n                WeakMap.prototype.set = function (target, value) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                    table[this._key] = value;\r\n                    return this;\r\n                };\r\n                WeakMap.prototype.delete = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? delete table[this._key] : false;\r\n                };\r\n                WeakMap.prototype.clear = function () {\r\n                    // NOTE: not a real clear, just makes the previous data unreachable\r\n                    this._key = CreateUniqueKey();\r\n                };\r\n                return WeakMap;\r\n            }());\r\n            function CreateUniqueKey() {\r\n                var key;\r\n                do\r\n                    key = \"@@WeakMap@@\" + CreateUUID();\r\n                while (HashMap.has(keys, key));\r\n                keys[key] = true;\r\n                return key;\r\n            }\r\n            function GetOrCreateWeakMapTable(target, create) {\r\n                if (!hasOwn.call(target, rootKey)) {\r\n                    if (!create)\r\n                        return undefined;\r\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n                }\r\n                return target[rootKey];\r\n            }\r\n            function FillRandomBytes(buffer, size) {\r\n                for (var i = 0; i < size; ++i)\r\n                    buffer[i] = Math.random() * 0xff | 0;\r\n                return buffer;\r\n            }\r\n            function GenRandomBytes(size) {\r\n                if (typeof Uint8Array === \"function\") {\r\n                    if (typeof crypto !== \"undefined\")\r\n                        return crypto.getRandomValues(new Uint8Array(size));\r\n                    if (typeof msCrypto !== \"undefined\")\r\n                        return msCrypto.getRandomValues(new Uint8Array(size));\r\n                    return FillRandomBytes(new Uint8Array(size), size);\r\n                }\r\n                return FillRandomBytes(new Array(size), size);\r\n            }\r\n            function CreateUUID() {\r\n                var data = GenRandomBytes(UUID_SIZE);\r\n                // mark as random - RFC 4122 § 4.4\r\n                data[6] = data[6] & 0x4f | 0x40;\r\n                data[8] = data[8] & 0xbf | 0x80;\r\n                var result = \"\";\r\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                    var byte = data[offset];\r\n                    if (offset === 4 || offset === 6 || offset === 8)\r\n                        result += \"-\";\r\n                    if (byte < 16)\r\n                        result += \"0\";\r\n                    result += byte.toString(16).toLowerCase();\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n        function MakeDictionary(obj) {\r\n            obj.__ = undefined;\r\n            delete obj.__;\r\n            return obj;\r\n        }\r\n    });\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}